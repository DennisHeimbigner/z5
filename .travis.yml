os: 
  - linux
  - osx
compiler:
  - gcc
  - clang
dist: trusty
sudo: required
language: python
python:
  - "2.7"
  - "3.5"
  - "3.6"
addons:
  apt:
    update: true

before_script:
  # install gcc 5 for liux
  - if [[ "$TRAVIS_OS_NAME" == "linux"]]; then
    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux"]]; then
    sudo apt-get --allow-unauthenticated update
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux"]];
    then sudo apt-get --allow-unauthenticated -y install gcc-5 g++-5
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux"]]; then
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5
    fi
  # install conda 
  - if [[ "$TRAVIS_OS_NAME" == "linux"]]; then 
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"]]; then
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh 
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  # create the test environment
  - conda create -q -n test-env python=$TRAVIS_PYTHON_VERSION
  - source activate test-env
  - conda install -c conda-forge xtensor=0.15.1
  - conda install -c conda-forge xtensor-python
  - conda install -c conda-forge boost c-blosc zlib bzip2 xz
  - conda install -c conda-forge scikit-image
  - conda install -c anaconda cmake
  - conda install six

script:

  ###############################################
  # shortcuts
  ###############################################
  - export PATH="$HOME/miniconda/bin:$PATH"
  - source activate test-env
  - export ENV_ROOT="$HOME/miniconda/envs/test-env"
  - export ENV_BIN=$ENV_ROOT/bin

  ###############################################
  # setup compiler
  ###############################################
  - export CXX=/usr/bin/g++
  - export CC=/usr/bin/gcc

  ###############################################
  # configure cmake
  ###############################################
  - $ENV_BIN/cmake
          -DWITHIN_TRAVIS=ON
          -DWITH_BLOSC=ON
          -DWITH_ZLIB=ON
          -DWITH_BZIP2=ON
          -DWITH_XZ=ON
          -DCMAKE_PREFIX_PATH="$ENV_ROOT"
          # -DWITH_LZ4=ON


  ###############################################
  # the actual build
  ###############################################
  - make -j 4

  ###############################################
  # test the project
  ###############################################
  # cpp tests TODO this is not elegant...
  # FIXME this is not working
  #- cd src/test
  #- ./test_metadata
  #- ./test_dataset
  #- ./test_factories
  #- ./test_attributes
  #- ./compression/test_raw
  #- ./compression/test_zlib
  #- ./compression/test_bzip2
  #- ./compression/test_blosc
  #- ./io/test_io_n5
  #- ./io/test_io_zarr
  #- ./multiarray/test_broadcast
  #- ./multiarray/test_xtensor
  ## - ./multiarray/test_xtnd
  #- cd ../..

  # python tests
  - export PYTHONPATH="./python:$PYTHONPATH"
  # TODO install additional dependencies for converter
  # - hdf5, dvid
  # run all python unittests
  - $ENV_BIN/python -m unittest discover -v python/test
